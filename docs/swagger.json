{
    "swagger": "2.0",
    "info": {
        "description": "API Server for OrderService Application",
        "title": "OrderService App Api",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/order": {
            "post": {
                "description": "Create a new order with the given details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new order",
                "operationId": "create-order",
                "parameters": [
                    {
                        "description": "Order object to be created",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Failed to create order",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Return all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Return all orders",
                "operationId": "get-all-orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orders",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Failed to create order",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Get details of an order by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get order by UID",
                "operationId": "get-order-by-uid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Delivery": {
            "type": "object",
            "required": [
                "address",
                "city",
                "email",
                "name",
                "phone",
                "region",
                "zip"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "domain.Items": {
            "type": "object",
            "required": [
                "brand",
                "chrt_id",
                "name",
                "nm_id",
                "price",
                "rid",
                "total_price"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "chrt_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nm_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "rid": {
                    "type": "string"
                },
                "sale": {
                    "description": "Assuming sale is a percentage",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "size": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "domain.Order": {
            "type": "object",
            "required": [
                "customer_id",
                "delivery",
                "delivery_service",
                "entry",
                "items",
                "locale",
                "payment",
                "shardkey",
                "sm_id",
                "track_number"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "delivery": {
                    "description": "Add validation for Delivery struct",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.Delivery"
                        }
                    ]
                },
                "delivery_service": {
                    "type": "string"
                },
                "entry": {
                    "type": "string"
                },
                "internal_signature": {
                    "type": "string"
                },
                "items": {
                    "description": "Dive into the slice and validate each item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Items"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "order_uid": {
                    "type": "string"
                },
                "payment": {
                    "$ref": "#/definitions/domain.Payment"
                },
                "shardkey": {
                    "type": "string"
                },
                "sm_id": {
                    "type": "integer"
                },
                "track_number": {
                    "type": "string"
                }
            }
        },
        "domain.Payment": {
            "type": "object",
            "required": [
                "amount",
                "bank",
                "currency",
                "delivery_cost",
                "goods_total",
                "payment_dt",
                "provider",
                "transaction"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "bank": {
                    "type": "string"
                },
                "currency": {
                    "description": "Assuming currency is a 3-letter code",
                    "type": "string"
                },
                "delivery_cost": {
                    "type": "integer",
                    "minimum": 0
                },
                "goods_total": {
                    "type": "integer",
                    "minimum": 0
                },
                "payment_dt": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "transaction": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Order",
            "in": "header"
        }
    }
}